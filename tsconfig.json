{
  "compilerOptions": {
    "target": "es2016",
    "jsx": "react",
    "jsxFactory": "h", /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
    "jsxFragmentFactory": "Fragment", /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    "module": "CommonJS", /* Specify what module code is generated. */
    "baseUrl": "./", /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@/*": [
        "src/*"
      ]
    }, /* Specify a set of entries that re-map imports to additional lookup locations. */
    /* Emit */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "noEmit": true, /* Disable emitting files from a compilation. */
    "downlevelIteration": true, /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true, /* Check for class properties that are declared but not set in the constructor. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
}